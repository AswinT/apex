<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link rel="stylesheet" href="/css/style.css">
    <style>
        .auth-container {
            max-width: 500px;
            margin: 2rem auto;
            padding: 2rem;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        .form-group {
            margin-bottom: 1.5rem;
        }
        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 500;
        }
        .form-group input {
            width: 100%;
            padding: 0.8rem;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 1rem;
        }
        .form-group .error {
            color: #e74c3c;
            font-size: 0.9rem;
            margin-top: 0.3rem;
        }
        .auth-btn {
            background-color: #2c3e50;
            color: white;
            border: none;
            padding: 0.8rem 1.5rem;
            border-radius: 4px;
            font-size: 1rem;
            cursor: pointer;
            width: 100%;
        }
        .auth-btn:hover {
            background-color: #1a252f;
        }
        .auth-footer {
            text-align: center;
            margin-top: 1.5rem;
        }
        #statusMessage {
            padding: 1rem;
            border-radius: 4px;
            margin-bottom: 1rem;
            display: none;
        }
        .success {
            background-color: #d4edda;
            color: #155724;
        }
        .error {
            background-color: #f8d7da;
            color: #721c24;
        }
        .password-strength {
            margin-top: 0.5rem;
            font-size: 0.9rem;
        }
        .strength-meter {
            height: 5px;
            width: 100%;
            background-color: #e0e0e0;
            margin-top: 0.3rem;
            border-radius: 3px;
        }
        .strength-meter div {
            height: 100%;
            border-radius: 3px;
            transition: width 0.3s;
        }
        .weak {
            background-color: #e74c3c;
            width: 30%;
        }
        .medium {
            background-color: #f39c12;
            width: 60%;
        }
        .strong {
            background-color: #27ae60;
            width: 100%;
        }
    </style>
</head>
<body>
    <header>
        <nav class="navbar">
            <div class="logo">
                <h1>APEX</h1>
            </div>
            <ul class="nav-links">
                <li><a href="/">Home</a></li>
                <li><a href="/products">Products</a></li>
                <li><a href="/about">About</a></li>
                <li><a href="/contact">Contact</a></li>
            </ul>
        </nav>
    </header>

    <main>
        <div class="auth-container">
            <h2>Reset Your Password</h2>
            <p>Please enter a new password for your account</p>
            
            <div id="statusMessage"></div>
            
            <form id="resetPasswordForm">
                <input type="hidden" id="token" value="<%= token %>">
                
                <div class="form-group">
                    <label for="password">New Password</label>
                    <input type="password" id="password" name="password" required>
                    <div class="password-strength">
                        <span id="passwordStrengthText">Password strength</span>
                        <div class="strength-meter">
                            <div id="strengthMeter"></div>
                        </div>
                    </div>
                </div>
                
                <div class="form-group">
                    <label for="confirmPassword">Confirm New Password</label>
                    <input type="password" id="confirmPassword" name="confirmPassword" required>
                    <div id="passwordMatch" class="error" style="display: none;">Passwords do not match</div>
                </div>
                
                <button type="submit" class="auth-btn">Reset Password</button>
            </form>
            
            <div class="auth-footer">
                <p>Remember your password? <a href="/login">Login</a></p>
            </div>
        </div>
    </main>

    <footer>
        <div class="copyright">
            <p>&copy; <%= new Date().getFullYear() %> Apex Headphones. All Rights Reserved.</p>
        </div>
    </footer>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const resetPasswordForm = document.getElementById('resetPasswordForm');
            const statusMessage = document.getElementById('statusMessage');
            const password = document.getElementById('password');
            const confirmPassword = document.getElementById('confirmPassword');
            const passwordMatch = document.getElementById('passwordMatch');
            const strengthMeter = document.getElementById('strengthMeter');
            const strengthText = document.getElementById('passwordStrengthText');
            
            // Check password strength
            password.addEventListener('input', function() {
                const value = this.value;
                
                // Check password strength
                if (value.length < 8) {
                    strengthMeter.className = 'weak';
                    strengthText.textContent = 'Weak (min 8 characters)';
                    strengthMeter.style.width = '30%';
                } else if (value.length >= 8 && !(/[A-Z]/.test(value) && /[0-9]/.test(value))) {
                    strengthMeter.className = 'medium';
                    strengthText.textContent = 'Medium (add uppercase & numbers)';
                    strengthMeter.style.width = '60%';
                } else {
                    strengthMeter.className = 'strong';
                    strengthText.textContent = 'Strong';
                    strengthMeter.style.width = '100%';
                }
            });
            
            // Check if passwords match
            confirmPassword.addEventListener('input', function() {
                if (this.value !== password.value) {
                    passwordMatch.style.display = 'block';
                } else {
                    passwordMatch.style.display = 'none';
                }
            });
            
            resetPasswordForm.addEventListener('submit', async function(e) {
                e.preventDefault();
                
                // Get form data
                const token = document.getElementById('token').value;
                const passwordValue = password.value;
                const confirmPasswordValue = confirmPassword.value;
                
                // Validate passwords
                if (passwordValue !== confirmPasswordValue) {
                    statusMessage.textContent = 'Passwords do not match';
                    statusMessage.className = 'error';
                    statusMessage.style.display = 'block';
                    return;
                }
                
                if (passwordValue.length < 8) {
                    statusMessage.textContent = 'Password must be at least 8 characters long';
                    statusMessage.className = 'error';
                    statusMessage.style.display = 'block';
                    return;
                }
                
                try {
                    // Send reset password request
                    const response = await fetch(`/reset-password/${token}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ 
                            password: passwordValue,
                            confirmPassword: confirmPasswordValue
                        })
                    });
                    
                    const data = await response.json();
                    
                    if (data.success) {
                        // Show success message
                        statusMessage.textContent = data.message;
                        statusMessage.className = 'success';
                        statusMessage.style.display = 'block';
                        
                        // Redirect to login page
                        setTimeout(() => {
                            window.location.href = data.redirect || '/login';
                        }, 2000);
                    } else {
                        // Show error message
                        statusMessage.textContent = data.message;
                        statusMessage.className = 'error';
                        statusMessage.style.display = 'block';
                    }
                } catch (error) {
                    console.error('Error:', error);
                    statusMessage.textContent = 'An error occurred. Please try again.';
                    statusMessage.className = 'error';
                    statusMessage.style.display = 'block';
                }
            });
        });
    </script>
</body>
</html>
